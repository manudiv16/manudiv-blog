name: ci

on:
  push:
    branches:
      - main
      - develop

jobs:
  multi:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/manudiv-blog
      URL: manudiv.org
      STACK-NAME: blog-manudiv

    steps:
      - uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Select Env
        shell: bash
        run: |
          case ${{ steps.extract_branch.outputs.branch }} in 
            main)
              echo "environment=production" >> $GITHUB_ENV
              cho "environment-folder=''" >> $GITHUB_ENV
              echo "environment-url=${env.URL}" >> $GITHUB_ENV
              ;;
            develop)
              echo "environment=staging" >> $GITHUB_ENV
              echo "environment-folder=development" >> $GITHUB_ENV
              echo "environment-url=dev.${env.URL}" >> $GITHUB_ENV
              ;;
            *)
              echo "nothing"
              ;;
          esac

      - name: Creating envs
        run: |
          echo "IMAGE_TAG=sha-$(git rev-parse --short HEAD)-${{ env.environment }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          build-args: ENVIRONMENT=${{ env.environment-folder }}
          tags: ${{ env.DOCKER_IMAGE }}:latest,${{ env.DOCKER_IMAGE }}:${{ env.IMAGE_TAG }}

      - name: deploy to portainer
        uses: LGinC/portainer-stack-deploy@master
        with:
          serverurl: ${{ secrets.PORTAINER_HOST }}
          username: ${{ secrets.PORTAINER_USERNAME }}
          password: ${{ secrets.PORTAINER_PASSWORD }}
          stackname: ${{ env.environment }}-${{ env.STACK-NAME }}
          imagename: ${{ env.DOCKER_IMAGE}}:${{ env.IMAGE_TAG }}
          docker_compose: |
            version: "3.3"
            services:
              ${{ steps.selection_environment.outputs.environment }}-blog-manu:
                image: manudiv1/manudiv-blog:alpine
                restart: unless-stopped
                networks:
                  - proxy
                labels:
                  - "traefik.enable=true"
                  - "traefik.docker.network=proxy"
                  - "traefik.http.routers.${{ env.environment }}-blog-manu.entrypoints=websecure"
                  - "traefik.http.routers.${{ env.environment }}-blog-manu.rule=Host(`${{ env.environment-url }}`)"
                  - "traefik.http.routers.${{ env.environment }}-blog-manu.service=blog-manu"
                  - "traefik.http.services.${{ env.environment }}-blog-manu.loadbalancer.server.port=80"
            networks:
              proxy:
                external: true

      # - name: Deploy stack to Portainer
      #   uses: carlrygart/portainer-stack-deploy@v1
      #   with:
      #     portainer-host: ${{ secrets.PORTAINER_HOST }}
      #     username: ${{ secrets.PORTAINER_USERNAME }}
      #     password: ${{ secrets.PORTAINER_PASSWORD }}
      #     stack-name: ${{ steps.selection_environment.outputs.environment }}-${{ env.STACK-NAME }}
      #     stack-definition: "infra.yml"
      #     image: ${{ env.DOCKER_IMAGE}}:${{ env.IMAGE_TAG }}
